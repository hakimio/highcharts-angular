{"version":3,"sources":["../../../highcharts-angular/src/lib/highcharts-chart.component.ts","../../../highcharts-angular/src/lib/highcharts-chart.module.ts"],"names":["HighchartsChartComponent","el","_zone","this","updateChange","EventEmitter","chartInstance","prototype","ngOnChanges","changes","update","currentValue","options","wrappedUpdateOrCreateChart","emit","_this","runOutsideAngular","updateOrCreateChart","chart","oneToOne","Highcharts","constructorType","nativeElement","callbackFunction","ngOnDestroy","destroy","Component","args","selector","template","ElementRef","NgZone","Input","Output","NgModule","declarations","exports"],"mappings":"wVAqBE,SAAAA,EACUC,EACAC,GADAC,KAAAF,GAAAA,EACAE,KAAAD,MAAAA,EAPAC,KAAAC,aAAe,IAAIC,EAAAA,cAAsB,GACzCF,KAAAG,cAAgB,IAAID,EAAAA,oBAS9BL,EAAAO,UAAAC,YAAA,SAAYC,GACV,IAAMC,EAASD,EAAQC,QAAUD,EAAQC,OAAOC,cAC5CF,EAAQG,SAAWF,KACrBP,KAAKU,6BACDH,GACFP,KAAKC,aAAaU,MAAK,KAK7Bd,EAAAO,UAAAM,2BAAA,WAAA,IAAAE,EAAAZ,KACMA,KAAKa,kBACPb,KAAKD,MAAMc,mBAAkB,WAC3BD,EAAKE,yBAGPd,KAAKc,uBAITjB,EAAAO,UAAAU,oBAAA,WACMd,KAAKe,OAASf,KAAKe,MAAMR,OAC3BP,KAAKe,MAAMR,OAAOP,KAAKS,SAAS,EAAMT,KAAKgB,WAAY,IAEvDhB,KAAKe,MAASf,KAAKiB,WAAmBjB,KAAKkB,iBAAmB,SAC5DlB,KAAKF,GAAGqB,cACRnB,KAAKS,QACLT,KAAKoB,kBAAoB,MAI3BpB,KAAKG,cAAcQ,KAAKX,KAAKe,SAIjClB,EAAAO,UAAAiB,YAAA,WACMrB,KAAKe,QACPf,KAAKe,MAAMO,UACXtB,KAAKe,MAAQ,gCA7DlBQ,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAU,gDALQC,EAAAA,kBAAoDC,EAAAA,8CAQrEC,EAAAA,+BACAA,EAAAA,gCACAA,EAAAA,wBACAA,EAAAA,iCACAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,4BAEAC,EAAAA,8BACAA,EAAAA,gBCVH,iCAJCC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,aAAc,CAAEnC,GAChBoC,QAAS,CAAEpC","sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnDestroy, Output, NgZone, OnChanges, SimpleChanges } from '@angular/core';\r\nimport type * as Highcharts from 'highcharts';\r\n\r\n@Component({\r\n  selector: 'highcharts-chart',\r\n  template: ''\r\n})\r\nexport class HighchartsChartComponent implements OnDestroy, OnChanges {\r\n  @Input() Highcharts: typeof Highcharts;\r\n  @Input() constructorType: string;\r\n  @Input() callbackFunction: Highcharts.ChartCallbackFunction;\r\n  @Input() oneToOne: boolean; // #20\r\n  @Input() runOutsideAngular: boolean; // #75\r\n  @Input() options: Highcharts.Options;\r\n  @Input() update: boolean;\r\n\r\n  @Output() updateChange = new EventEmitter<boolean>(true);\r\n  @Output() chartInstance = new EventEmitter<Highcharts.Chart>(); // #26\r\n\r\n  private chart: Highcharts.Chart;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private _zone: NgZone // #75\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const update = changes.update && changes.update.currentValue;\r\n    if (changes.options || update) {\r\n      this.wrappedUpdateOrCreateChart();\r\n      if (update) {\r\n        this.updateChange.emit(false); // clear the flag after update\r\n      }\r\n    }\r\n  }\r\n\r\n  wrappedUpdateOrCreateChart() { // #75\r\n    if (this.runOutsideAngular) {\r\n      this._zone.runOutsideAngular(() => {\r\n        this.updateOrCreateChart()\r\n      });\r\n    } else {\r\n      this.updateOrCreateChart();\r\n    }\r\n  }\r\n\r\n  updateOrCreateChart() {\r\n    if (this.chart && this.chart.update) {\r\n      this.chart.update(this.options, true, this.oneToOne || false);\r\n    } else {\r\n      this.chart = (this.Highcharts as any)[this.constructorType || 'chart'](\r\n        this.el.nativeElement,\r\n        this.options,\r\n        this.callbackFunction || null\r\n      );\r\n\r\n      // emit chart instance on init\r\n      this.chartInstance.emit(this.chart);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() { // #44\r\n    if (this.chart) {  // #56\r\n      this.chart.destroy();\r\n      this.chart = null;\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {HighchartsChartComponent} from './highcharts-chart.component';\r\n\r\n@NgModule({\r\n  declarations: [ HighchartsChartComponent ],\r\n  exports: [ HighchartsChartComponent ]\r\n})\r\nexport class HighchartsChartModule {}\r\n"]}